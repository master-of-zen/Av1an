name: tests
on:
  push:
    paths-ignore:
      - "*.yml"
      - .gitignore
      - "*.md"
  pull_request:
    paths-ignore:
      - "*.yml"
      - .gitignore
      - "*.md"

env:
  deps: tree llvm clang mkvtoolnix
  DEBIAN_FRONTEND: noninteractive

jobs:
  all-tests:
    runs-on: ubuntu-latest
    container: luigi311/encoders-docker:20210901
    steps:
      - uses: actions/checkout@v2
      - name: Validate encoders
        run: |
          aomenc --help
          SvtAv1EncApp --help
          rav1e --help
          x265 --help || true

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: default
          default: true
          components: rustfmt, clippy

      - name: Install requirements
        run: |
          apt-get update && apt-get install -y ${{ env.deps }}

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --no-default-features

      - name: Build Av1an
        run: |
          cargo build --release --features ffmpeg_static

      - name: Download videos
        run: |
          for url in raw.githubusercontent.com/OpenVisualCloud/SVT-AV1-Resources/master randomderp.com; do
            curl -LO https://$url/video.tar.gz && break
          done
          tar xf video.tar.gz

      - name: Testing unit tests
        working-directory: ./av1an-core
        run: |
          cargo test

      - name: Testing baseline aom
        run: |
          target/release/av1an -i bus_cif.y4m -e aom -c mkvmerge -y -o "bus_cif.mkv"
          du -h bus_cif.mkv
          tree -a

      - name: Testing baseline rav1e
        run: |
          target/release/av1an -i bus_cif.y4m -e rav1e -c mkvmerge -y -o "bus_cif.mkv"
          du -h bus_cif.mkv
          tree -a

      - name: Testing baseline svt-av1
        run: |
          target/release/av1an -i bus_cif.y4m -e svt-av1 -c mkvmerge -y -o "bus_cif.mkv"
          du -h bus_cif.mkv
          tree -a

      - name: Testing baseline vpx
        run: |
          target/release/av1an -i bus_cif.y4m -e vpx -c mkvmerge -y -o "bus_cif.mkv"
          du -h bus_cif.mkv
          tree -a

      - name: Testing baseline x265
        run: |
          target/release/av1an -i bus_cif.y4m -e x265 -c mkvmerge -y -o "bus_cif.mkv"
          du -h bus_cif.mkv
          tree -a

      - name: Testing baseline x264
        run: |
          target/release/av1an -i bus_cif.y4m -e x264 -c mkvmerge -y -o "bus_cif.mkv"
          du -h bus_cif.mkv
          tree -a

      - name: Testing baseline-select aom
        run: |
          target/release/av1an -i bus_cif.y4m -e aom -c mkvmerge -y -o "bus_cif.mkv" --chunk-method select
          du -h bus_cif.mkv
          tree -a

      - name: Testing baseline-select rav1e
        run: |
          target/release/av1an -i bus_cif.y4m -e rav1e -c mkvmerge -y -o "bus_cif.mkv" --chunk-method select
          du -h bus_cif.mkv
          tree -a

      - name: Testing baseline-select svt-av1
        run: |
          target/release/av1an -i bus_cif.y4m -e svt-av1 -c mkvmerge -y -o "bus_cif.mkv" --chunk-method select
          du -h bus_cif.mkv
          tree -a

      - name: Testing baseline-select vpx
        run: |
          target/release/av1an -i bus_cif.y4m -e vpx -c mkvmerge -y -o "bus_cif.mkv" --chunk-method select
          du -h bus_cif.mkv
          tree -a

      - name: Testing baseline-select x265
        run: |
          target/release/av1an -i bus_cif.y4m -e x265 -c mkvmerge -y -o "bus_cif.mkv" --chunk-method select
          du -h bus_cif.mkv
          tree -a

      - name: Testing baseline-select x264
        run: |
          target/release/av1an -i bus_cif.y4m -e x264 -c mkvmerge -y -o "bus_cif.mkv" --chunk-method select
          du -h bus_cif.mkv
          tree -a

      - name: Testing target-quality aom
        run: |
          target/release/av1an -i bus_cif.y4m -e aom -c mkvmerge -y -o "bus_cif.mkv" --target-quality 95
          du -h bus_cif.mkv
          tree -a

      - name: Testing target-quality rav1e
        run: |
          target/release/av1an -i bus_cif.y4m -e rav1e -c mkvmerge -y -o "bus_cif.mkv" --target-quality 95
          du -h bus_cif.mkv
          tree -a

      - name: Testing target-quality svt-av1
        run: |
          target/release/av1an -i bus_cif.y4m -e svt-av1 -c mkvmerge -y -o "bus_cif.mkv" --target-quality 95
          du -h bus_cif.mkv
          tree -a

      - name: Testing target-quality vpx
        run: |
          target/release/av1an -i bus_cif.y4m -e vpx -c mkvmerge -y -o "bus_cif.mkv" --target-quality 95
          du -h bus_cif.mkv
          tree -a

      - name: Testing target-quality x265
        run: |
          target/release/av1an -i bus_cif.y4m -e x265 -c mkvmerge -y -o "bus_cif.mkv" --target-quality 95
          du -h bus_cif.mkv
          tree -a

      - name: Testing target-quality x264
        run: |
          target/release/av1an -i bus_cif.y4m -e x264 -c mkvmerge -y -o "bus_cif.mkv" --target-quality 95
          du -h bus_cif.mkv
          tree -a

      - name: Testing probe-slow aom
        run: |
          target/release/av1an -i bus_cif.y4m -e aom -c mkvmerge -y -o "bus_cif.mkv" --target-quality 95 --probe-slow
          du -h bus_cif.mkv
          tree -a

      - name: Testing probe-slow rav1e
        run: |
          target/release/av1an -i bus_cif.y4m -e rav1e -c mkvmerge -y -o "bus_cif.mkv" --target-quality 95 --probe-slow
          du -h bus_cif.mkv
          tree -a

      - name: Testing probe-slow svt-av1
        run: |
          target/release/av1an -i bus_cif.y4m -e svt-av1 -c mkvmerge -y -o "bus_cif.mkv" --target-quality 95 --probe-slow
          du -h bus_cif.mkv
          tree -a

      - name: Testing probe-slow vpx
        run: |
          target/release/av1an -i bus_cif.y4m -e vpx -c mkvmerge -y -o "bus_cif.mkv" --target-quality 95 --probe-slow
          du -h bus_cif.mkv
          tree -a

      - name: Testing probe-slow x265
        run: |
          target/release/av1an -i bus_cif.y4m -e x265 -c mkvmerge -y -o "bus_cif.mkv" --target-quality 95 --probe-slow
          du -h bus_cif.mkv
          tree -a

      - name: Testing probe-slow x264
        run: |
          target/release/av1an -i bus_cif.y4m -e x264 -c mkvmerge -y -o "bus_cif.mkv" --target-quality 95 --probe-slow
          du -h bus_cif.mkv
          tree -a

      - name: Testing chunk_hybrid aom
        run: |
          target/release/av1an -i bus_cif.y4m -e aom -c mkvmerge -y -o "bus_cif.mkv" --chunk-method hybrid
          du -h bus_cif.mkv
          tree -a

      - name: Testing chunk_select aom
        run: |
          target/release/av1an -i bus_cif.y4m -e aom -c mkvmerge -y -o "bus_cif.mkv" --chunk-method select
          du -h bus_cif.mkv
          tree -a

      - name: Testing chunk_ffms2 aom
        run: |
          target/release/av1an -i bus_cif.y4m -e aom -c mkvmerge -y -o "bus_cif.mkv" --chunk-method ffms2
          du -h bus_cif.mkv
          tree -a

      - name: Testing chunk_lsmash aom
        run: |
          target/release/av1an -i bus_cif.y4m -e aom -c mkvmerge -y -o "bus_cif.mkv" --chunk-method lsmash
          du -h bus_cif.mkv
          tree -a

      - name: Testing scenes aom
        run: |
          target/release/av1an -i bus_cif.y4m -e aom -c mkvmerge -y -o "bus_cif.mkv" -s scenes.json
          du -h bus_cif.mkv
          tree -a

      - name: Testing workers aom
        run: |
          target/release/av1an -i bus_cif.y4m -e aom -c mkvmerge -y -o "bus_cif.mkv" -w 2
          du -h bus_cif.mkv
          tree -a

      - name: Testing vmaf aom
        run: |
          target/release/av1an -i bus_cif.y4m -e aom -c mkvmerge -y -o "bus_cif.mkv" --vmaf
          du -h bus_cif.mkv
          tree -a

      - name: Testing extra_splits aom
        run: |
          target/release/av1an -i bus_cif.y4m -e aom -c mkvmerge -y -o "bus_cif.mkv" -x 10
          du -h bus_cif.mkv
          tree -a

      - name: Testing baselivideo_settingsne aom
        run: |
          target/release/av1an -i bus_cif.y4m -e aom -c mkvmerge -y -o "bus_cif.mkv" -v " --cpu-used=3 --end-usage=q --cq-level=30 --threads=8 "
          du -h bus_cif.mkv
          tree -a

      - name: Testing temp aom
        run: |
          target/release/av1an -i bus_cif.y4m -e aom -c mkvmerge -y -o "bus_cif.mkv" --temp temporary
          du -h bus_cif.mkv
          tree -a

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: av1an:action
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Tar docker cache
        run: tar -cf /tmp/docker-cache.tar /tmp/.buildx-cache

      - name: Artifact docker cache
        uses: actions/upload-artifact@v2
        with:
          name: docker-cache
          path: /tmp/docker-cache.tar

  docker-publish:
    needs: [all-tests, docker]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: docker-cache
          path: /tmp/

      - name: Extract docker cache
        run: tar -xf /tmp/docker-cache.tar -C /

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/av1an # list of Docker images to use as base name for tags
          tag-sha: true # add git short SHA as Docker tag

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
